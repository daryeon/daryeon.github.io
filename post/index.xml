<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on 大叶的博客</title>
    <link>https://daryeon.github.io/post/</link>
    <description>Recent content in Posts on 大叶的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 25 Mar 2021 06:56:44 +0800</lastBuildDate><atom:link href="https://daryeon.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go实现常见排序算法</title>
      <link>https://daryeon.github.io/post/small-common-sort-func/</link>
      <pubDate>Mon, 06 May 2019 12:09:12 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/small-common-sort-func/</guid>
      <description>简介 介绍一些常用的排序，包括：快排、冒泡、选择、插入、归并、堆排序，基于go语言的实现。 快排排序 package main import ( &amp;#34;fmt&amp;#34; ) func main() { arr := []int{3, 2, 4, 2, 1, 5, 6, 7, 5, 6, 7,</description>
    </item>
    
    <item>
      <title>Go的一些小细节</title>
      <link>https://daryeon.github.io/post/go-small-details/</link>
      <pubDate>Wed, 06 Mar 2019 12:09:12 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/go-small-details/</guid>
      <description>简介 GO的一些小细节分享。 map 无序性 map存储的数据并不保证有序性，通常可以把key写入一个slice切片，依靠slice切片的有序性来读取m</description>
    </item>
    
    <item>
      <title>网络流量抓包库gopacket介绍</title>
      <link>https://daryeon.github.io/post/go-library-gopacket/</link>
      <pubDate>Thu, 25 Mar 2021 06:56:44 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/go-library-gopacket/</guid>
      <description>简介 gopacket是什么？ gopacket是google出品的golang三方库，质量还是靠的住，项目地址为：github.com/goo</description>
    </item>
    
    <item>
      <title>分布式任务&#43;消息队列框架go-queue</title>
      <link>https://daryeon.github.io/post/go-library-go-queue/</link>
      <pubDate>Sun, 21 Mar 2021 06:56:44 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/go-library-go-queue/</guid>
      <description>为什么要写这个库？ 在开始自研 go-queue 之前，针对以下我们调研目前的开源队列方案： beanstalkd beanstalkd 有一些特殊好用功能：支持任务 priority、延时 (delay)</description>
    </item>
    
    <item>
      <title>简单总结下并发编程模式</title>
      <link>https://daryeon.github.io/post/go-bingfa-programing/</link>
      <pubDate>Fri, 20 Mar 2020 08:51:34 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/go-bingfa-programing/</guid>
      <description>简介 简单介绍自己对并发编程模式的一些理解。 并发与并行 并发是指多个程序在一段时间内同时运行，而并行是指多个程序在某一时刻同时运行。所以并行也可</description>
    </item>
    
    <item>
      <title>GO语言map类型interface{}转换踩坑小记</title>
      <link>https://daryeon.github.io/post/go-map-to-interface/</link>
      <pubDate>Wed, 11 Mar 2020 16:09:12 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/go-map-to-interface/</guid>
      <description>简介 最近在学Go语言，在使用map的时候遇到一个小坑，记录一下。 代码介绍 package main import &amp;#34;fmt&amp;#34; func main(){ mapA := make([string]interface{}) mapB := make([string]interface{}) mapA[&amp;#34;name&amp;#34;] = &amp;#34;大叶&amp;#34; mapA[&amp;#34;age&amp;#34;] = 25 mapB[&amp;#34;mapA&amp;#34;] = mapA for k,</description>
    </item>
    
    <item>
      <title>Go的编译命令总结</title>
      <link>https://daryeon.github.io/post/golang-build-command/</link>
      <pubDate>Thu, 06 Feb 2020 16:09:12 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/golang-build-command/</guid>
      <description>理解Go的环境变量 Go的源码分类 go run 命令 go build go install 简介 go编译命令的一些总结。 理解Go的环境变量 GOROOT:Go语言的当前安装目录 GOPAT</description>
    </item>
    
    <item>
      <title>PHP的命名空间讲解</title>
      <link>https://daryeon.github.io/post/php-namespace/</link>
      <pubDate>Sun, 25 Feb 2018 08:51:34 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/php-namespace/</guid>
      <description>简介 PHP命名空间是PHP5.3开始支持。本篇讲解PHP命名空间用法和PHP命名空间详解。它的诞生使的我们在一个文件中可以使用多个同名的类而</description>
    </item>
    
    <item>
      <title>phpQuery—基于jQuery的PHP实现</title>
      <link>https://daryeon.github.io/post/php-libraray-phpquery/</link>
      <pubDate>Fri, 16 Feb 2018 08:51:34 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/php-libraray-phpquery/</guid>
      <description>简介 Query的选择器之强大是有目共睹的，phpQuery 让php也拥有了这样的能力，它就相当于服务端的jQuery。 phpQuery is a server-side, chainable, CSS3 selector driven Document Object Model</description>
    </item>
    
    <item>
      <title>php获取当月天数及当月第一天及最后一天、上月第一天及最后一天实现方法</title>
      <link>https://daryeon.github.io/post/php-date-function-used/</link>
      <pubDate>Fri, 16 Feb 2018 08:51:34 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/php-date-function-used/</guid>
      <description>简介 在做查询过程中,例如要实现查上个月从第一天到最后一天的佣金(提成),那我们在程序实现过程中就要让程序在上个月的范围内查询,第一天是比较好</description>
    </item>
    
    <item>
      <title>基于php&amp;运算符的巧妙应用</title>
      <link>https://daryeon.github.io/post/base-on-php-_and_symbol-skill/</link>
      <pubDate>Sat, 10 Feb 2018 08:51:34 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/base-on-php-_and_symbol-skill/</guid>
      <description>简介 &amp;amp;:and，按位与。以$a &amp;amp; $b为例，将$a和$b转化为二进制后，都为1的位设为1。 表达式 $a = 6; $b = 3; var_dump($a &amp;amp; $b); 输出:int(2) 原</description>
    </item>
    
    <item>
      <title>unicode,ascii,utf-8编码的区别</title>
      <link>https://daryeon.github.io/post/encode-introduce/</link>
      <pubDate>Sat, 03 Feb 2018 08:51:34 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/encode-introduce/</guid>
      <description>简介 很久很久以前，有一群人，他们决定用8个可以开合的晶体管来组合成不同的状态，以表示世界上的万物。他们看到8个开关状态是好的，于是他们把这称</description>
    </item>
    
    <item>
      <title>Composer和自动加载学习分享</title>
      <link>https://daryeon.github.io/post/composer-and-aotuload/</link>
      <pubDate>Mon, 15 Jan 2018 08:51:34 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/composer-and-aotuload/</guid>
      <description>简介 分享composer和自动加载相关介绍 概念 composer：是PHP用来管理依赖（dependency）关系的工具 对于现代语言而言，包管</description>
    </item>
    
    <item>
      <title>如何将Pjax整合进网站，实现全站无刷新加载？</title>
      <link>https://daryeon.github.io/post/pjax-introduce/</link>
      <pubDate>Tue, 02 Jan 2018 08:51:34 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/pjax-introduce/</guid>
      <description>简介 pjax 是 HTML5 pushState 以及 Ajax 两项技术的简称，综合这两个技术可以实现在不刷新页面的情况下载入HTML网页，带给你超快速的浏览器体验，而且有固定链接、标题</description>
    </item>
    
    <item>
      <title>Shortcodes Notice Preview</title>
      <link>https://daryeon.github.io/post/shortcode-notice/</link>
      <pubDate>Mon, 01 Jan 2018 16:01:23 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/shortcode-notice/</guid>
      <description>normal use Note example: {{% notice note %}} A notice disclaimer {{% /notice %}} Result: You could custom title : {{% notice note 笔记 %}} A notice disclaimer {{% /notice %}} tip {{% notice tip %}} A tip disclaimer {{% /tip %}} info {{% notice info %}} A info disclaimer {{% /notice %}} warning {{% notice warning %}} A warning disclaimer {{% /notice %}}</description>
    </item>
    
    <item>
      <title>(Hu)go Template Primer</title>
      <link>https://daryeon.github.io/post/goisforlovers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://daryeon.github.io/post/goisforlovers/</guid>
      <description>+++ description = &amp;quot;&amp;quot; tags = [ &amp;ldquo;go&amp;rdquo;, &amp;ldquo;golang&amp;rdquo;, &amp;ldquo;templates&amp;rdquo;, &amp;ldquo;themes&amp;rdquo;, &amp;ldquo;development&amp;rdquo;, ] date = &amp;ldquo;2014-04-02&amp;rdquo; categories = [ &amp;ldquo;Development&amp;rdquo;, &amp;ldquo;golang&amp;rdquo;, &amp;ldquo;index&amp;rdquo;, ] +++
Hugo uses the excellent go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in go templates.</description>
    </item>
    
  </channel>
</rss>
