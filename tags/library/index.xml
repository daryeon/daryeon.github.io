<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>library on 大叶的博客</title>
    <link>https://daryeon.github.io/tags/library/</link>
    <description>Recent content in library on 大叶的博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Fri, 26 Mar 2021 06:56:44 +0800</lastBuildDate><atom:link href="https://daryeon.github.io/tags/library/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>日志切割组件库lumberjack介绍</title>
      <link>https://daryeon.github.io/post/go-library-lumberjack/</link>
      <pubDate>Fri, 26 Mar 2021 06:56:44 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/go-library-lumberjack/</guid>
      <description>简介 Golang 语言标准库的 log 包不支持日志切割，然而如果我们业务每天产生海量日志，日志文件就会越来越大，甚至会触发磁盘空间不足的报警，此时如果我们移动</description>
    </item>
    
    <item>
      <title>网络流量抓包库gopacket介绍</title>
      <link>https://daryeon.github.io/post/go-library-gopacket/</link>
      <pubDate>Thu, 25 Mar 2021 06:56:44 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/go-library-gopacket/</guid>
      <description>简介 gopacket是什么？ gopacket是google出品的golang三方库，质量还是靠的住，项目地址为：github.com/goo</description>
    </item>
    
    <item>
      <title>分布式任务&#43;消息队列框架go-queue</title>
      <link>https://daryeon.github.io/post/go-library-go-queue/</link>
      <pubDate>Sun, 21 Mar 2021 06:56:44 +0800</pubDate>
      
      <guid>https://daryeon.github.io/post/go-library-go-queue/</guid>
      <description>为什么要写这个库？ 在开始自研 go-queue 之前，针对以下我们调研目前的开源队列方案： beanstalkd beanstalkd 有一些特殊好用功能：支持任务 priority、延时 (delay)</description>
    </item>
    
  </channel>
</rss>
